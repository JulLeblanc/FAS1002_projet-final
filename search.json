[
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "Exploration",
    "section": "",
    "text": "NB : Ouvrir la bribe de code pour voir les packages nécessaires à l’importation et la manipulation des données."
  },
  {
    "objectID": "exploration.html#statistiques-descriptives",
    "href": "exploration.html#statistiques-descriptives",
    "title": "Exploration",
    "section": "Statistiques descriptives",
    "text": "Statistiques descriptives\n\nLife Expectancy at Birth\nLa première est celle du Life Expectancy qui comprend au total 5 variables et plus de 56616 observations. Cette banque de données et mis à jour régulièrement et continent des observations pour :\n\nUn total de 195 pays\nCalculées depuis 1800 et estiment l’espérance de vie moyenne pour les différents pays jusqu’en 2100.\nLa banque de donnée regroupe les pays sous les 5 continents principaux soit l’Afrique, les Amériques, l’Asie, l’Europe et l’Océanie.\n\nVoici notamment un récapitulatif des données.\n\n\nCode\nskim(df_gapminder)\n\n\n\nData summary\n\n\nName\ndf_gapminder\n\n\nNumber of rows\n56616\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ngeo\n0\n1\n3\n3\n0\n195\n0\n\n\ncountry\n0\n1\n3\n30\n0\n195\n0\n\n\ncontinent\n0\n1\n4\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1950.38\n86.51\n1800.00\n1876.0\n1952.00\n2024.00\n2100.00\n▇▇▇▇▇\n\n\nlife_exp\n0\n1\n53.35\n21.32\n1.01\n32.9\n50.02\n73.96\n94.42\n▁▇▃▅▅\n\n\n\n\n\nIl est possible aussi d’observer l’évolution de l’espérance de vie moyenne en fonction des continents. Les grandes cassures dans le temps peuvent être attribuables à différentes périodes historiques.\nNotamment, la grand cassure avant les années 1920 peuvent être à la fois attribuables à la Première Guerre mondiale, mais également à l’épidémie de la Grippe espagnole. La même tendance est observable dans les années 1940 pour la Seconde Guerre mondiale et plus récemment, la légère fracture pour la pandémie de la COVID-19.\n\n\nCode\ngraph <- df_gapminder |> \n    group_by(continent,\n             year) |> \n    mutate(mean_continent = mean(life_exp, na.rm = TRUE)) |> \n    ungroup() |> \n    group_by(year) |> \n    mutate(mean_world = mean(life_exp, na.rm = TRUE))\n    \n\np1 <- ggplot() +\n    geom_line(data = graph,\n             aes(x = year,\n                 y = mean_continent,\n                 color = continent)) +\n    scale_x_continuous(n.breaks = 12) +\n    scale_color_discrete(name = \"Continents\",\n                         labels = c(\"Afrique\",\n                                    \"Amériques\",\n                                    \"Asie\",\n                                    \"Europe\",\n                                    \"Océanie\")) +\n    theme_bw() + \n    labs(title = \"Évolution de l'espérance de vie\",\n         source = \"https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions\",\n         x = \" \",\n         y = \" \") \n\n\n\n\np2 <-  ggplot(data = graph,\n              aes(x = year,\n                      y = mean_world)) +\n    geom_line() +\n    scale_x_continuous(n.breaks = 12) +\n    theme_bw() + \n    labs(title = \"Évolution de l'espérance de vie mondiale\",\n         source = \"https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions\",\n         x = \" \",\n         y = \" \")\n\np2 + p1\n\n\n\n\n\n\n\nOur World in Data, Co2\nLa banque de données est @owid, qui a comme but principal de décrire comment les émissions de Co2 et de gaz à effets de serres évoluent dans le temps.\nLa banque de données présentent plus de :\n\n75 variables comme le PIB, le nombre d’habitants dans le pays, l’année et une variable qui a été ajouté et celle qui regroupe les pays sous les 5 continents,\nDifférentes mesures pour le Co2 comme l’émissions brutes, l’accumulation ou bien le rendement par énergie dépensé, etc.\nLes données enregistrées sont mise à jour de manière presqu’hebdomadaire et ont des observations débutants en 1750.\n\nPuisque la banque de données regroupent de nombreuses variables, une sélection des plus importantes pour les analyses qui suivront a été fait. Les variables qui ont été retenues sont celles du :\n\nPays country,\nAnnées year,\nContinents continent,\nPIB gdp,\nNombre d’habitants total population,\nCo2 co2,\n\n\n\nCode\nowid <- df_owid |> \n    select(country,\n           year,\n           continent,\n           gdp,\n           population,\n           co2)\n\n\n\n\nCode\nskim(owid)\n\n\n\nData summary\n\n\nName\nowid\n\n\nNumber of rows\n46523\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ncountry\n0\n1.00\n4\n32\n0\n269\n0\n\n\ncontinent\n44891\n0.04\n4\n9\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1.00\n1.925690e+03\n6.104000e+01\n1750\n1.882000e+03\n1.930000e+03\n1.977000e+03\n2.021000e+03\n▁▂▇▇▇\n\n\ngdp\n31972\n0.31\n2.679977e+11\n2.104075e+12\n49980000\n7.530493e+09\n2.605900e+10\n1.134711e+11\n1.136302e+14\n▇▁▁▁▁\n\n\npopulation\n7949\n0.83\n6.005374e+07\n3.280828e+08\n21\n3.808912e+05\n2.509282e+06\n9.996447e+06\n7.909295e+09\n▇▁▁▁▁\n\n\nco2\n15174\n0.67\n3.799900e+02\n1.799880e+03\n0\n1.200000e-01\n3.110000e+00\n4.366000e+01\n3.712385e+04\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\ngraph_owid_world <- df_owid |> \n    filter(country == \"World\") |> \n    select(co2,\n           year,\n           country)\n\nggplot(data = graph_owid_world,\n       aes(x = year,\n           y = co2)) +\n    geom_line() +\n    scale_x_continuous(n.breaks = 12) +\n    scale_y_continuous(n.breaks = 5) +\n    geom_point(size = 0.3) +\n    labs(title = \"Co2 total mondial\") +\n    theme_bw()\n\n\n\n\n\n\n\nCode\ngraph_owid <- df_owid |> \n    filter(is.na (continent) == FALSE,\n           is.na (co2) == FALSE) |> \n    group_by(continent,\n             year) |> \n    select(co2)\n\np3 <- ggplot(data = graph_owid,\n             aes(x = year,\n                 y = co2,\n                 color = continent)) +\n    geom_line(stat = \"identity\") +\n    scale_color_discrete(name = \"Continents\",\n                         labels = c(\"Afrique\",\n                                    \"Amériques\",\n                                    \"Asie\",\n                                    \"Europe\",\n                                    \"Océanie\")) +\n    theme_bw()\np3\n\n\n\n\n\n\n\nCode\nggplot(data = graph_owid,\n       aes(x = year,\n           y = co2,\n           colour = continent)) +\n    geom_point(size = 0.3) +\n    theme_bw()\n\n\n\n\n\nPlus de CO2 en 2021\n\n\nCode\ndf_owid |> \n    filter(year == 2021) |> \n    select(country,\n           co2) |> \n    arrange(desc(co2))\n\n\n# A tibble: 260 × 2\n   country                          co2\n   <chr>                          <dbl>\n 1 World                         37124.\n 2 Non-OECD (GCP)                24398.\n 3 Asia                          21689.\n 4 Asia (GCP)                    18971.\n 5 Upper-middle-income countries 17039.\n 6 High-income countries         12516.\n 7 OECD (GCP)                    11704.\n 8 China                         11472.\n 9 Asia (excl. China and India)   7507.\n10 Lower-middle-income countries  6259.\n# … with 250 more rows\n\n\nco2 en 2021 : world is 37 milliards de tonnes? Chine - 11 millards (Asie 21) USA - 5007\n\n\nCode\ntop_5 <- df_owid |> \n    filter(country == c(\"China\",\n                        \"United States\",\n                        \"India\",\n                        \"Russia\")) |> \n    select(year,\n           co2,\n           country)\n\n\nWarning in country == c(\"China\", \"United States\", \"India\", \"Russia\"): longer\nobject length is not a multiple of shorter object length\n\n\nCode\nggplot(top_5) +\n    aes(x = year,\n        y = co2,\n        fill = country) +\n    geom_area(alpha = 0.4) +\n    scale_fill_hue(direction = 1) +\n    geom_line(data = graph_owid_world,\n              aes(x = year,\n                  y = co2,\n                  fill = country),\n              alpha = 0.5) +\n    theme_bw() \n\n\nWarning: Ignoring unknown aesthetics: fill\n\n\nWarning: Removed 17 rows containing missing values (position_stack).\n\n\n\n\n\nPays riches qui produisent le plus de co2 ? apparently yes\n\n\nCode\nrich <- df_owid |> \n    filter (country == c(\"Upper-middle-income countries\",\n                         \"High-income countries\",\n                         \"Lower-middle-income countries\",\n                         \"Low-income countries\")) |> \n    select(country,\n           co2,\n           year,\n           gdp)\n\n\nWarning in country == c(\"Upper-middle-income countries\", \"High-income\ncountries\", : longer object length is not a multiple of shorter object length\n\n\nCode\nggplot(data = rich,\n       aes(x = year,\n           y = co2,\n           fill = country)) +\n    geom_area(alpha = 0.3) +\n        geom_line(data = graph_owid_world,\n              aes(x = year,\n                  y = co2,\n                  fill = country),\n              alpha = 0.5) +\n    theme_bw()\n\n\nWarning: Ignoring unknown aesthetics: fill\n\n\n\n\n\nIndustrie plus émettrices"
  },
  {
    "objectID": "exploration.html#combinaison",
    "href": "exploration.html#combinaison",
    "title": "Exploration",
    "section": "Combinaison",
    "text": "Combinaison\nOn peut également entreprendre des analyses via la combinaison des deux banques de données puisqu’elles ont comme variables communes les années, les continents ainsi que la majorité des pays observés.\n\n\nCode\ndat <- inner_join(x = df_gapminder,\n                  y = owid)\n\nskim(dat)\n\n\n\nData summary\n\n\nName\ndat\n\n\nNumber of rows\n0\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ngeo\n0\nNaN\nNA\nNA\n0\n0\n0\n\n\ncountry\n0\nNaN\nNA\nNA\n0\n0\n0\n\n\ncontinent\n0\nNaN\nNA\nNA\n0\n0\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\nNaN\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nlife_exp\n0\nNaN\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ngdp\n0\nNaN\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\npopulation\n0\nNaN\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nco2\n0\nNaN\nNaN\nNA\nNA\nNA\nNA\nNA\nNA"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Analyses",
    "section": "",
    "text": "Il est maintenant le temps de décrire votre projet avant de passer au document suivant, soit l’importation et la manipulation des données.\nJe vous conseille d’écrire cette partie en dernier, une fois que vous aurez déjà vos résultats et figures afin d’éviter de réécrire cette page plusieurs fois.\n\n\n\n\n\n\nImportant\n\n\n\nN’oubliez pas d’inclure vos références sur chacune des pages!\n\n\nPar exemple:\n\nLes données proviennent entre autres de Ritchie, Roser, et Rosado (2022).\n\n\n\n\n\nLes références\n\nRitchie, Hannah, Max Roser, et Pablo Rosado. 2022. « Energy ». Our World in Data.\n\nCitationBibTeX@online{leblanc2023,\n  author = {Juliette Leblanc},\n  title = {Analyses},\n  date = {2023-09-12},\n  url = {https://VOTREUSERNAME.github.io/FAS1002_projet-final//intro.html},\n  langid = {fr}\n}\nVeuillez citer ce travail comme suit :\nJuliette Leblanc. 2023. “Analyses.” September 12, 2023. https://VOTREUSERNAME.github.io/FAS1002_projet-final//intro.html."
  },
  {
    "objectID": "import.html",
    "href": "import.html",
    "title": "Importation",
    "section": "",
    "text": "Consignes manquantes: Pour l’importation des données, vous aurez à les télécharger de plusieurs sources (GitHub, Google Sheet ou Excel). Il y a plusieurs stratégies possibles, à vous de jouer! ○ Cependant, vous devrez faire plus que de seulement importer les données. Puisque tout peut disparaître sur Internet ou être mis à jour sans préavis, vous devrez également télécharger les données. Par contre, il n’est pas optimal de procéder aux téléchargements à chaque fois que nous roulons le code. Les données brutes devront être téléchargées dans le dossier data/raw/ en respectant les conditions: ■ Ainsi, pour les données qui proviennent de Our World in Data, vous devrez développer du code pour télécharger et sauvegarder les fichiers avec la date à laquelle le téléchargement a lieu. La fréquence du téléchargement devrait être quotidienne puisque les données sont mises à jour fréquemment. Pour vous simplifier la tâche, pensez à programmer également la suppression de l’ancien fichier une fois que le nouveau est téléchargé. En d’autres mots, ces données ne devraient être téléchargées qu’une seule fois par jour lorsque votre rapport est produit. ■ Pour les données des autres sources, le principe est le même, mais la fréquence du téléchargement devra être mensuelle, donc à chaque mois seulement. ■ ex: data/raw/owid\n#Importer les données"
  },
  {
    "objectID": "import.html#our-world-in-data",
    "href": "import.html#our-world-in-data",
    "title": "Importation",
    "section": "Our World in Data",
    "text": "Our World in Data\nJ’utilise en premier la banque de données du Co2 and Greenhouse Gaz Emissions. Celle-ci sera mis à jour à tous les jours. Les données proviennent d’ici.\n\n\nCode\n#option cache=TRUE c'est si le code ne change pas, il ne devrait pas redownloader le fichier\n\nurl_owid <- \"https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv\"\n\nbase_path <- path(\"data\", \"raw\") # pour que nimporte qui puisse download avec le chemin relatif\n\nfname_owid <- paste(today(), \"owid-co2-data.csv\", sep = \"_\") # name the file with today's date\n\nfpath_owid <- path(base_path, fname_owid) \n\ndata_owid <- download.file(url = url_owid, destfile = fpath_owid)\n\ndf_owid <- read_csv(fpath_owid,  show_col_types = FALSE)"
  },
  {
    "objectID": "import.html#gapminder",
    "href": "import.html#gapminder",
    "title": "Importation",
    "section": "Gapminder",
    "text": "Gapminder\nPour la deuxième banque de données, je fais appel à celle produite par Gapminder qui se nomme Life Expectancy at Birth. Celle-ci seront re-téléchargé pour une mise à jour à tous les mois. Les données proviennent d’ici\n\n\nCode\nurl_gapminder <-  gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676\")\n\nbase_path <- path(\"data\", \"raw\")\n\nfname_gap <- paste(today(), \"gapm.csv\", sep = \"_\")\n\nfpath_gap <- path(base_path, fname_gap)\n\nwrite_csv(x = url_gapminder, file = fpath_gap)\n\ndf_gapminder <- read_csv(fpath_gap, show_col_types = FALSE)"
  },
  {
    "objectID": "import.html#continent",
    "href": "import.html#continent",
    "title": "Importation",
    "section": "Continent",
    "text": "Continent\nDans les deux banques de données que nous utilisons, j’ai créé une variable qui regroupe les différents pays en sous-groupe des 5 continents soit : l’Afrique, l’Amérique, l’Asie, l’Europe et l’Océanie. Ceci me permettra de faire des comparaisons plus large en me référant au continent et non au pays.\n\n\nCode\ndf_owid <- df_owid |> \n    mutate(continent = case_when(country == \"Europe\" ~ \"Europe\",\n                                 country == \"Africa\" ~\"Afrique\",\n                                 country == \"Asia\" ~ \"Asie\",\n                                 country == \"Oceania\" ~ \"Océanie\",\n                                 country == \"South America\" ~ \"Amériques\",\n                                 country == \"North America\" ~ \"Amériques\",\n                                 country == \"Central America \\\\(GCP)\" ~ \"Amériques\"))\n\n\ndf_gapminder <- df_gapminder |> \n    mutate(continent = countrycode(sourcevar = df_gapminder$name,\n                                   origin = \"country.name\",\n                                   destination = \"continent\"))"
  },
  {
    "objectID": "import.html#temps",
    "href": "import.html#temps",
    "title": "Importation",
    "section": "Temps",
    "text": "Temps\nIl est également intéressant de voir le temps écoulé entre la production de se rapport et la première année que des données ont été récoltées pour chacun des pays qui se trouvent dans le jeu de données de Life Expectancy at Birth.\nCette variable prendra le nom de time dans la banque de données.\n\n\nCode\n# df_gapminder <- df_gapminder |>\n#     mutate(time_since = as.Date(year, format = \"%Y\"))\n\n    \n    \n    \n # mutate(jour_mois = \"-01-01\") %>% #ajouter une colonne avec -MM-DD\n #     unite(time, jour_mois, col = time, sep = \"\") %>% #combiner les deux colonnes\n #     mutate(year_as_date = as.Date(time, format = \"%Y-%m-%d\")) #transformer en format de date\n #     \n # as.numeric(difftime(as.POSIXct(today()), \n #                     as.POSIXct(as.Date(min(LifeExDate$year_as_date), format = \"%Y-%m-%d\"))))"
  },
  {
    "objectID": "import.html#exporter",
    "href": "import.html#exporter",
    "title": "Importation",
    "section": "Exporter",
    "text": "Exporter\nMaintenant qu’une première manipulation des données a été fait, nous pouvons exporter celles-ci comme étant des données traitées dans le dossier data/processed.\nLes prochaines analyses auront comme point de départ les données traitées, donc qui ont été exportées dans le chemin relatif ci-dessus.\n\n\nCode\nwrite_csv(df_owid,file = \"data/processed/df_owid.csv\")\n\nwrite_csv(df_gapminder, file = \"data/processed/df_gapminder.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projet final du cours FAS1002",
    "section": "",
    "text": "Vous pouvez faire le résumé de votre projet directement sur cette page et utiliser le document intro pour décrire votre projet.\nChaque page est en fait un fichier Quarto standard. 1"
  },
  {
    "objectID": "index.html#vous-pourrez-inclure-des-graphiques",
    "href": "index.html#vous-pourrez-inclure-des-graphiques",
    "title": "Projet final du cours FAS1002",
    "section": "Vous pourrez inclure des graphiques",
    "text": "Vous pourrez inclure des graphiques\nComme la classique pyramide à la ci-dessous par exemple:\n\n\nCode\npar(mar = c(0, 1, 0, 1))\npie(\n  c(280, 60, 20),\n  c('Ciel', 'Côté ensoleillé de la pyramide', 'Côté ombragé de la pyramide'),\n  col = c('#0292D8', '#F7EA39', '#C4B632'),\n  init.angle = -50, border = NA\n)\n\n\n\n\n\nUne très belle tarte\n\n\n\n\n\nQuand même très cool, non? Vous pouvez mettre des annotations sur le côté!\n\n\nToujours très important de mettre les bons niveaux de titres\nUn peu de texte de remplissage pour faire comme si la page était plus longue. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
  },
  {
    "objectID": "index.html#remerciements",
    "href": "index.html#remerciements",
    "title": "Projet final du cours FAS1002",
    "section": "Remerciements",
    "text": "Remerciements\n\nJ’aimerais remercier toute la cohorte du cours FAS1002 de l’automne 2022 pour leur ouverture et efforts tout au long de la session!"
  },
  {
    "objectID": "a-propos.html#bio",
    "href": "a-propos.html#bio",
    "title": "À propos",
    "section": "Bio",
    "text": "Bio\nLe cours FAS1002 est une introduction à la programmation en sciences sociales avec R, un langage de programmation et un environnement statistique populaire pour analyser de données. Principalement convoité pour ses fonctionnalités statistiques avancées, R s’avère autant utilisé en recherche qu’en industrie, ce qui confère un avantage concret à son apprentissage. À ce sujet, R se prête bien à l’apprentissage de la programmation en raison de:\n\nsa nature libre et gratuite;\nsa polyvalence de fonctionnalités;\nsa popularité et sa variété de domaines d’application;\nla diversité de ressources et d’aide disponible gratuitement sur le Web;\nsa vibrante communauté reconnue pour son inclusivité et son support bienveillant."
  },
  {
    "objectID": "a-propos.html#contact",
    "href": "a-propos.html#contact",
    "title": "À propos",
    "section": "Contact",
    "text": "Contact\nProgramme | Microprogramme en analyse des mégadonnées en sciences humaines et sociales\nUniversité | Université de Montréal\nCourriel | fas1002@samuelguay.ca"
  }
]